[pytest]
# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum Python version
minversion = 3.11

# Output options
addopts =
    -ra
    --strict-markers
    --strict-config
    --showlocals
    --tb=short
    --cov=app
    --cov=collectors
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-branch

asyncio_default_fixture_loop_scope = session

# Coverage config
[coverage:run]
source = app,collectors
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */virtualenv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

# Markers for test categories
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require external services)
    e2e: End-to-end tests (full pipeline)
    slow: Slow tests (>1s execution time)
    asyncio: Async tests requiring event loop

# Asyncio configuration
asyncio_mode = auto

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
